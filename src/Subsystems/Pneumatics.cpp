// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.




#include "Pneumatics.h"
#include "../Robotmap.h"

Pneumatics::Pneumatics() : Subsystem("Pneumatics") {
	printf("Entering Pnuematics Constructor\n");
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	compressor1 = RobotMap::pneumaticsCompressor1;
	compressor2 = RobotMap::pneumaticsCompressor2;
	itsOn = false;
	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	printf("Exiting pnuematics Constructor\n");
}
    
void Pneumatics::InitDefaultCommand() {
	// Set the default command for a subsystem here.
	//SetDefaultCommand(new MySpecialCommand());
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
}


// Put methods for controlling this subsystem
// here. Call these from Commands.
/*
void Pneumatics::RetrieveConfig()
{
	// do nothing
}

void Pneumatics::StoreConfig()
{
	// do nothing
}

void Pneumatics::Configure()
{
	// do nothing
}
*/

void Pneumatics::On()
{
	compressor1->Enabled();
	compressor2->Enabled();
	compressor1->Start();
	compressor2->Start();

	int ipsw = compressor1->GetPressureSwitchValue();
	int tpsw = compressor2->GetPressureSwitchValue();

	bool c1r = compressor1->CheckRelayChannel(6);
	bool c2r = compressor2->CheckRelayChannel(2);

	printf("On c1psw %d  c1r %d, c2psw %d c2r %d\n",ipsw, c1r,tpsw,c2r);
	itsOn = true;
}

void Pneumatics::Off()
{
	compressor1->Stop();
	compressor2->Stop();

	int ipsw = compressor1->GetPressureSwitchValue();
	int tpsw = compressor2->GetPressureSwitchValue();

	bool c1r = compressor1->CheckRelayChannel(6);
	bool c2r = compressor2->CheckRelayChannel(2);

	printf("Off c1psw %d  c1r %d, c2psw %d c2r %d\n",ipsw, c1r,tpsw,c2r);
	itsOn = false;
}

bool Pneumatics::IsOn()
{
	return itsOn;
}
