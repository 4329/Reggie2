// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.




#include "Light.h"
#include "../Robotmap.h"

Light::Light() : Subsystem("Light") {
	printf("Entering Light Constructor\n");
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	spike = RobotMap::lightSpike;
	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	printf("Exiting Light Constructor\n");
}
    
void Light::InitDefaultCommand() {
	// Set the default command for a subsystem here.
	//SetDefaultCommand(new MySpecialCommand());
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
}


// Put methods for controlling this subsystem
// here. Call these from Commands.
/*
void Light::RetrieveConfig()
{
	// do nothing
}

void Light::StoreConfig()
{
	// do nothing
}

void Light::Configure()
{
	// do nothing
}
*/

void Light::On()
{
	spike->Set(Relay::kForward);
}

void Light::Off()
{
	spike->Set(Relay::kOff);
}

bool Light::IsOn()
{
	if (spike->Get() == Relay::kForward) return true;
	return false;
}
